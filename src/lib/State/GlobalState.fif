// SPDX-FileCopyrightText: 2019 Serokell <https://serokell.io>
//
// SPDX-License-Identifier: MPL-2.0

library GlobalState  // Payment channel global (immutable) state

{ dup
  Blen 32 <> abort"Key must be exactly 32 bytes long"
} : _assert_key
// ( key -- key )

{ <b
  7 roll _assert_key B,
  6 roll _assert_key B,
  5 roll 120 u,
  4 roll 120 u,
  3 roll 32 u,
  2 roll 120 u,
  1 roll 64 u,
  b>
} : mkGlobalState
// ( pk1 pk2 share1 share2 timeout fine nonce -- globalState )

{ <s
  32 B@+
  32 B@+
  120 u@+
  120 u@+
  32 u@+
  120 u@+
  64 u@+
  s>
} : parseGlobalState
// ( globalState -- pk1 pk2 share1 share2 timeout fine nonce )

{ <s
  32 B@
} : getGlobalStatePk1
// ( globalState -- pk1 )

{ <s
  32 B@+ nip
  32 B@
} : getGlobalStatePk2
// ( globalState -- pk2 )

{ <s
  32 B@+ nip
  32 B@+ nip
  120 u@
} : getGlobalStateShare1
// ( globalState -- share1 )

{ <s
  32 B@+ nip
  32 B@+ nip
  120 u@+ nip
  120 u@
} : getGlobalStateShare2
// ( globalState -- share2 )
